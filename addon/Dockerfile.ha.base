FROM ghcr.io/home-assistant/amd64-base-debian:bookworm as obico_opencl_builder
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y build-essential cmake git clang clang-format clang-tidy \
    ocl-icd-opencl-dev ocl-icd-dev opencl-headers clinfo ca-certificates libopencv-dev \
    libomp-dev libclblas-dev libclfft-dev 
# Lock darknet version for reproducibility
# compile CPU version
WORKDIR /
RUN git clone https://github.com/sowson/darknet  && cd darknet &&  git checkout aa44a7c1ffde24d2d54e894a3af3f47074b76130
RUN cd darknet \
  && sed -i 's/NVIDIA=1/NVIDIA=0/' Makefile \
  && sed -i 's/AMD=0/AMD=1/' Makefile \
  && make -j 4

# -----------------------------------------------------------------------------

FROM ghcr.io/home-assistant/amd64-base-debian:bookworm as ml_api_base_amd64

RUN apt update && apt install --no-install-recommends -y ca-certificates python3-pip wget python3 python3-venv


COPY --from=obico_opencl_builder /darknet /darknet
WORKDIR /app
COPY addon/rootfs /
RUN apt update && apt install -y ca-certificates pip wget
RUN pip install --upgrade pip
RUN pip install  opencv_python_headless 
# # Install ONNX and ONNX Runtime with OpenCL support
RUN pip install onnx onnxruntime 

EXPOSE 3333

ADD addon/rootfs/app /app
RUN pip install -r requirements.txt

RUN echo 'Downloading the latest failure detection AI model in Darknet format...'
RUN wget -O model/model-weights.darknet $(cat model/model-weights.darknet.url | tr -d '\r')
RUN echo 'Downloading the latest failure detection AI model in ONNX format...'
RUN wget -O model/model-weights.onnx $(cat model/model-weights.onnx.url | tr -d '\r')

RUN chmod +x /etc/services.d/ha-bambulab-spaghetti-detection/run

